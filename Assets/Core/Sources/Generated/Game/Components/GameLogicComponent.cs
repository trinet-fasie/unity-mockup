//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TM.ECS.Components.LogicComponent logic { get { return (TM.ECS.Components.LogicComponent)GetComponent(GameComponentsLookup.Logic); } }
    public bool hasLogic { get { return HasComponent(GameComponentsLookup.Logic); } }

    public void AddLogic(TM.Types.LogicInstance newValue) {
        var index = GameComponentsLookup.Logic;
        var component = CreateComponent<TM.ECS.Components.LogicComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLogic(TM.Types.LogicInstance newValue) {
        var index = GameComponentsLookup.Logic;
        var component = CreateComponent<TM.ECS.Components.LogicComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLogic() {
        RemoveComponent(GameComponentsLookup.Logic);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLogic;

    public static Entitas.IMatcher<GameEntity> Logic {
        get {
            if (_matcherLogic == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Logic);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLogic = matcher;
            }

            return _matcherLogic;
        }
    }
}
