//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TM.ECS.Components.WrapperComponent wrapper { get { return (TM.ECS.Components.WrapperComponent)GetComponent(GameComponentsLookup.Wrapper); } }
    public bool hasWrapper { get { return HasComponent(GameComponentsLookup.Wrapper); } }

    public void AddWrapper(TM.Wrapper newValue) {
        var index = GameComponentsLookup.Wrapper;
        var component = CreateComponent<TM.ECS.Components.WrapperComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWrapper(TM.Wrapper newValue) {
        var index = GameComponentsLookup.Wrapper;
        var component = CreateComponent<TM.ECS.Components.WrapperComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWrapper() {
        RemoveComponent(GameComponentsLookup.Wrapper);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWrapper;

    public static Entitas.IMatcher<GameEntity> Wrapper {
        get {
            if (_matcherWrapper == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Wrapper);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWrapper = matcher;
            }

            return _matcherWrapper;
        }
    }
}
