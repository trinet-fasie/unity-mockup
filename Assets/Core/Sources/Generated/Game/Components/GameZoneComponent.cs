//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TM.ECS.Components.ZoneComponent zone { get { return (TM.ECS.Components.ZoneComponent)GetComponent(GameComponentsLookup.Zone); } }
    public bool hasZone { get { return HasComponent(GameComponentsLookup.Zone); } }

    public void AddZone(System.Collections.Generic.List<TM.Wrapper> newWrappersList) {
        var index = GameComponentsLookup.Zone;
        var component = CreateComponent<TM.ECS.Components.ZoneComponent>(index);
        component.WrappersList = newWrappersList;
        AddComponent(index, component);
    }

    public void ReplaceZone(System.Collections.Generic.List<TM.Wrapper> newWrappersList) {
        var index = GameComponentsLookup.Zone;
        var component = CreateComponent<TM.ECS.Components.ZoneComponent>(index);
        component.WrappersList = newWrappersList;
        ReplaceComponent(index, component);
    }

    public void RemoveZone() {
        RemoveComponent(GameComponentsLookup.Zone);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherZone;

    public static Entitas.IMatcher<GameEntity> Zone {
        get {
            if (_matcherZone == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Zone);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherZone = matcher;
            }

            return _matcherZone;
        }
    }
}
