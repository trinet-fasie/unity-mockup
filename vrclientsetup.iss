; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "VarwinClient"
#define MyAppVersion "0.3.0-RC1"
#define MyAppPublisher "Varwin"
#define MyAppURL "http://varwin.com/"
#define MyAppExeName "VarwinClientLauncher.exe"
#define MyAppExeLaunchName "VarwinClient.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{049F925C-F9EB-4171-9055-E4AB745555EF}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename=VarwinClientSetup
SetupIconFile=install.ico
Compression=lzma
SolidCompression=yes
ChangesAssociations = yes
ArchitecturesAllowed=x64
ArchitecturesInstallIn64BitMode=x64

;[Languages]
; Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Files]
Source: "D:\Apps\VarwinClient\*"; DestDir: "{app}";  Flags: recursesubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]  
Root: HKCR; Subkey: "vwp"; ValueType: string; ValueName: "URL Protocol"; ValueData: "URL: Varwin Client Launch Protocol"        
Root: HKCR; Subkey: "vwp\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "VarwinClientLauncher.exe,1"   
Root: HKCR; Subkey: "vwp\shell"; ValueType: string; ValueName: ""; ValueData: "open"   
Root: HKCR; Subkey: "vwp\shell\open"; ValueType: string; ValueName: ""; ValueData: ""   
Root: HKCR; Subkey: "vwp\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""  

Root: HKCR; Subkey: ".vwa"; ValueData: "{#MyAppName}\vwa"; Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwa"; ValueData: "Varwin application ""VWA""";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwa\DefaultIcon"; ValueData: "{app}\icon-world.ico,0"; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwa\shell\open\command";  ValueData: """{app}\{#MyAppExeLaunchName}"" ""%1""";  ValueType: string;  ValueName: ""

Root: HKCR; Subkey: ".vwo"; ValueData: "{#MyAppName}\vwo"; Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwo"; ValueData: "Varwin object ""VWO""";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwo\DefaultIcon"; ValueData: "{app}\icon-object.ico,0"; ValueType: string;  ValueName: ""

Root: HKCR; Subkey: ".vwl"; ValueData: "{#MyAppName}\vwl"; Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwl"; ValueData: "Varwin location ""VWL""";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwl\DefaultIcon"; ValueData: "{app}\icon-location.ico,0"; ValueType: string;  ValueName: ""

Root: HKCR; Subkey: ".vwm"; ValueData: "{#MyAppName}\vwm"; Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwm"; ValueData: "Varwin project meta ""VWM""";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\vwm\DefaultIcon"; ValueData: "{app}\icon-export.ico,0"; ValueType: string;  ValueName: ""

[Code]
function GetUninstallString: string;
var
  sUnInstPath: string;
  sUnInstallString: String;
begin
  Result := '';
  sUnInstPath := ExpandConstant('Software\Microsoft\Windows\CurrentVersion\Uninstall\{{049F925C-F9EB-4171-9055-E4AB745555EF}_is1'); { Your App GUID/ID }
  sUnInstallString := '';
  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then
    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);
  Result := sUnInstallString;
end;

function IsUpgrade: Boolean;
begin
  Result := (GetUninstallString() <> '');
end;

function InitializeSetup: Boolean;
var
  V: Integer;
  iResultCode: Integer;
  sUnInstallString: string;
begin
  Result := True; { in case when no previous version is found }
  if RegValueExists(HKEY_LOCAL_MACHINE,'Software\Microsoft\Windows\CurrentVersion\Uninstall\{049F925C-F9EB-4171-9055-E4AB745555EF}_is1', 'UninstallString') then  { Your App GUID/ID }
  begin
    V := MsgBox(ExpandConstant('Old version of VarwinClient was detected and has to be removed before the installation. Do you want to uninstall it now?'), mbInformation, MB_YESNO); { Custom Message if App installed }
    if V = IDYES then
    begin
      sUnInstallString := GetUninstallString();
      sUnInstallString :=  RemoveQuotes(sUnInstallString);
      Exec(ExpandConstant(sUnInstallString), '', '', SW_SHOW, ewWaitUntilTerminated, iResultCode);
      Result := True; { if you want to proceed after uninstall }
      { Exit; //if you want to quit after uninstall }
    end
    else begin
      MsgBox(ExpandConstant('Can not install the new version without removing the old one first!'), mbInformation, MB_OK);          
      Result := False; { when older version present and not uninstalled }
      Exit;
    end
  end;
end;

